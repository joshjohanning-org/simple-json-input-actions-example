name: trigger-workflow-and-wait

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      data: ${{ steps.json.outputs.data }}
    steps:
      - uses: actions/checkout@v4
      - name: Load json
        uses: actions/github-script@v7
        id: json
        with:
          script: |
            const fs = require('fs');
            let data = fs.readFileSync('.github/input.json', 'utf8');
            core.setOutput('data', data);
  build:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4
      - run: echo "${{ fromJson(needs.prepare.outputs.data) }}"
      - run: echo "${{ toJson(needs.prepare.outputs.data) }}"
      - run: echo "${{ toJson(needs.prepare.outputs.data.workflow) }}"
      - run: echo "${{ toJson(needs.prepare.outputs.data.workflow).workflow }}"
      - run: echo "${{ toJson(needs.prepare.outputs.data.workflow)[0] }}"
      - name: Use JSON data
        run: |
          DATA="${{ steps.json.outputs.data }}"
          for row in $(echo "${DATA}" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
            echo $(_jq '.workflow')
            echo $(_jq '.workflow_payload.color')
            echo $(_jq '.workflow_payload.number')
            # and so on for other properties
          done

